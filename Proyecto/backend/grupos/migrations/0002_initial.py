# Generated by Django 4.2.25 on 2025-10-24 07:10

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('grupos', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Comentario',
            fields=[
                ('id_comentario', models.IntegerField(db_column='ID_COMENTARIO', primary_key=True, serialize=False)),
                ('mensaje_comentario', models.TextField(db_column='MENSAJE_COMENTARIO')),
                ('fecha_publicacion', models.DateTimeField(db_column='FECHA_PUBLICACION')),
                ('estado_comentario', models.CharField(db_column='ESTADO_COMENTARIO', max_length=20)),
            ],
            options={
                'db_table': 'comentario',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Evento',
            fields=[
                ('id_evento', models.IntegerField(db_column='ID_EVENTO', primary_key=True, serialize=False)),
                ('nombre_evento', models.CharField(db_column='NOMBRE_EVENTO', max_length=60)),
                ('descripcion_evento', models.TextField(db_column='DESCRIPCION_EVENTO')),
                ('fecha_inicio', models.DateTimeField(db_column='FECHA_INICIO')),
                ('fecha_fin', models.DateTimeField(db_column='FECHA_FIN')),
                ('lugar', models.CharField(db_column='LUGAR', max_length=60)),
                ('tipo_evento', models.CharField(db_column='TIPO_EVENTO', max_length=40)),
                ('cupo', models.CharField(db_column='CUPO', max_length=20)),
                ('estado_evento', models.CharField(db_column='ESTADO_EVENTO', max_length=20)),
            ],
            options={
                'db_table': 'evento',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Grupo',
            fields=[
                ('id_grupo', models.IntegerField(db_column='ID_GRUPO', primary_key=True, serialize=False)),
                ('nombre_grupo', models.CharField(db_column='NOMBRE_GRUPO', max_length=60)),
                ('area_interes', models.CharField(db_column='AREA_INTERES', max_length=40)),
                ('fecha_creacion', models.DateField(db_column='FECHA_CREACION')),
                ('tipo_grupo', models.CharField(db_column='TIPO_GRUPO', max_length=40)),
                ('logo', models.TextField(db_column='LOGO')),
                ('correo_grupo', models.CharField(db_column='CORREO_GRUPO', max_length=128)),
                ('descripcion', models.TextField(db_column='DESCRIPCION')),
                ('link_whatsapp', models.CharField(blank=True, db_column='LINK_WHATSAPP', max_length=128, null=True)),
            ],
            options={
                'db_table': 'grupo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Notificacion',
            fields=[
                ('id_notificacion', models.IntegerField(db_column='ID_NOTIFICACION', primary_key=True, serialize=False)),
                ('tipo_notificacion', models.CharField(db_column='TIPO_NOTIFICACION', max_length=20)),
                ('mensaje', models.TextField(db_column='MENSAJE')),
                ('fecha_envio', models.DateTimeField(db_column='FECHA_ENVIO')),
            ],
            options={
                'db_table': 'notificacion',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Participacion',
            fields=[
                ('id_participaciones', models.IntegerField(db_column='ID_PARTICIPACIONES', primary_key=True, serialize=False)),
                ('fecha_registro', models.DateField(db_column='FECHA_REGISTRO')),
                ('comentario', models.CharField(db_column='COMENTARIO', max_length=100)),
                ('estado_participacion', models.CharField(db_column='ESTADO_PARTICIPACION', max_length=20)),
            ],
            options={
                'db_table': 'participacion',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Rol',
            fields=[
                ('id_rol', models.IntegerField(db_column='ID_ROL', primary_key=True, serialize=False)),
                ('nombre_rol', models.CharField(db_column='NOMBRE_ROL', max_length=20)),
            ],
            options={
                'db_table': 'rol',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id_usuario', models.IntegerField(db_column='ID_USUARIO', primary_key=True, serialize=False)),
                ('nombre_usuario', models.CharField(db_column='NOMBRE_USUARIO', max_length=60)),
                ('apellido', models.CharField(db_column='APELLIDO', max_length=60)),
                ('correo_usuario', models.CharField(db_column='CORREO_USUARIO', max_length=128)),
                ('estado_usuario', models.CharField(db_column='ESTADO_USUARIO', max_length=20)),
            ],
            options={
                'db_table': 'usuario',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ParticipacionUsuario',
            fields=[
                ('id_usuario', models.OneToOneField(db_column='ID_USUARIO', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='grupos.usuario')),
            ],
            options={
                'db_table': 'participacion_usuario',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UsuarioComentario',
            fields=[
                ('id_comentario', models.OneToOneField(db_column='ID_COMENTARIO', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='grupos.comentario')),
            ],
            options={
                'db_table': 'usuario_comentario',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UsuarioGrupo',
            fields=[
                ('id_grupo', models.OneToOneField(db_column='ID_GRUPO', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='grupos.grupo')),
            ],
            options={
                'db_table': 'usuario_grupo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UsuarioNotificacion',
            fields=[
                ('id_notificacion', models.OneToOneField(db_column='ID_NOTIFICACION', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='grupos.notificacion')),
            ],
            options={
                'db_table': 'usuario_notificacion',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UsuarioRol',
            fields=[
                ('id_rol', models.OneToOneField(db_column='ID_ROL', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='grupos.rol')),
            ],
            options={
                'db_table': 'usuario_rol',
                'managed': False,
            },
        ),
    ]
